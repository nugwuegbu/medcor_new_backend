# Generated by Django 5.0.1 on 2025-08-18 20:07

import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('hospital_name', models.CharField(blank=True, help_text='Name of the hospital or clinic', max_length=200)),
                ('appointment_type', models.CharField(choices=[('CONSULTATION', 'Consultation'), ('FOLLOW_UP', 'Follow-up'), ('ROUTINE_CHECKUP', 'Routine Checkup'), ('EMERGENCY', 'Emergency'), ('TELEMEDICINE', 'Telemedicine'), ('VACCINATION', 'Vaccination'), ('LAB_TEST', 'Lab Test'), ('SURGERY', 'Surgery'), ('THERAPY', 'Therapy')], default='CONSULTATION', max_length=20)),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('NO_SHOW', 'No Show'), ('RESCHEDULED', 'Rescheduled')], default='SCHEDULED', max_length=20)),
                ('scheduled_date', models.DateField()),
                ('scheduled_time', models.TimeField()),
                ('duration_minutes', models.IntegerField(default=30)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('check_in_time', models.DateTimeField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time_actual', models.DateTimeField(blank=True, null=True)),
                ('reason', models.TextField()),
                ('symptoms', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('is_telemedicine', models.BooleanField(default=False)),
                ('meeting_link', models.URLField(blank=True)),
                ('meeting_id', models.CharField(blank=True, max_length=100)),
                ('meeting_password', models.CharField(blank=True, max_length=100)),
                ('is_follow_up', models.BooleanField(default=False)),
                ('cancellation_reason', models.TextField(blank=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('reminder_sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'db_table': 'appointments',
                'ordering': ['scheduled_date', 'scheduled_time'],
            },
        ),
        migrations.CreateModel(
            name='DoctorAvailabilitySlot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('hospital_name', models.CharField(blank=True, help_text='Name of the hospital or clinic', max_length=200)),
                ('start_time', models.DateTimeField(help_text='Slot start date and time')),
                ('end_time', models.DateTimeField(help_text='Slot end date and time')),
                ('slot_duration_minutes', models.IntegerField(default=30, help_text='Duration of each appointment slot in minutes')),
                ('max_appointments', models.IntegerField(default=1, help_text='Maximum number of appointments that can be booked in this slot')),
                ('current_appointments', models.IntegerField(default=0, help_text='Current number of appointments booked in this slot')),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('BOOKED', 'Booked'), ('BLOCKED', 'Blocked'), ('BREAK', 'Break'), ('UNAVAILABLE', 'Unavailable')], default='AVAILABLE', max_length=20)),
                ('is_recurring', models.BooleanField(default=False)),
                ('recurrence_pattern', models.CharField(choices=[('NONE', 'No Recurrence'), ('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly')], default='NONE', max_length=20)),
                ('recurrence_end_date', models.DateField(blank=True, null=True)),
                ('day_of_week', models.IntegerField(blank=True, choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], help_text='For weekly recurring slots', null=True)),
                ('allowed_appointment_types', models.JSONField(blank=True, default=list, help_text='List of appointment types allowed in this slot')),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('advance_booking_days', models.IntegerField(default=30, help_text='How many days in advance this slot can be booked')),
                ('minimum_notice_hours', models.IntegerField(default=24, help_text='Minimum hours notice required for booking')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'doctor_availability_slots',
                'ordering': ['start_time'],
            },
        ),
    ]
