#!/bin/bash

# Script to fix Django settings to properly load environment variables
# This adds python-dotenv loading to settings.py

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Logging function
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR:${NC} $1"
}

warning() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING:${NC} $1"
}

log "🔧 Fixing Django settings to load environment variables..."

# Navigate to project directory
cd /var/www/html/medcor_backend2

# Activate virtual environment
if [ -d "venv" ]; then
    source venv/bin/activate
    log "✅ Virtual environment activated"
else
    error "❌ Virtual environment not found"
    exit 1
fi

# Install python-dotenv
log "📦 Installing python-dotenv..."
pip install python-dotenv

# Backup current settings.py
log "💾 Backing up current settings.py..."
cp medcor_backend2/settings.py medcor_backend2/settings.py.backup.$(date +%Y%m%d_%H%M%S)

# Add environment variable loading to settings.py
log "🔧 Adding environment variable loading to settings.py..."

# Create a temporary file with the updated settings
cat > medcor_backend2/settings_temp.py << 'EOF'
"""
Django settings for medcor_backend2 project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
EOF

# Append the rest of the settings file (excluding the first 20 lines)
tail -n +21 medcor_backend2/settings.py >> medcor_backend2/settings_temp.py

# Replace the original settings file
mv medcor_backend2/settings_temp.py medcor_backend2/settings.py

log "✅ Settings.py updated to load environment variables"

# Test the updated settings
log "🧪 Testing updated settings..."
if python -c "
import os
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'medcor_backend2.settings')
import django
django.setup()
from django.conf import settings
print('Database host:', settings.DATABASES['default']['HOST'])
print('Database name:', settings.DATABASES['default']['NAME'])
" 2>/dev/null; then
    log "✅ Updated settings working correctly"
else
    error "❌ Settings update failed, restoring backup..."
    cp medcor_backend2/settings.py.backup.* medcor_backend2/settings.py
    exit 1
fi

log "🎉 Settings environment loading fix completed!"