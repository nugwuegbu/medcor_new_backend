version: "3.8"

services:
  # Note: Using AWS RDS PostgreSQL instead of local database
  # Database: medcore.czouassyu7f2.il-central-1.rds.amazonaws.com:5432/medcor_db2

  # Note: Using existing RabbitMQ service on host instead of Redis
  # RabbitMQ is already installed on the AWS server
  # Connection: amqp://guest:guest@localhost:5672//

  # Django Application
  web:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 --timeout 120 medcor_backend2.wsgi:application"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=your-secret-key-here
      - DATABASE_ENGINE=django.db.backends.postgresql
      - DATABASE_NAME=medcor_db2
      - DATABASE_USER=postgres
      - DATABASE_PASS=3765R7vmFQwF6ddlNyWa
      - DATABASE_HOST=medcore.czouassyu7f2.il-central-1.rds.amazonaws.com
      - DATABASE_PORT=5432
      - CELERY_BROKER_URL=amqp://guest:guest@host.docker.internal:5672//
      - CELERY_RESULT_BACKEND=rpc://
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5000
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker (Note: Using existing RabbitMQ service on host)
  celery:
    build: .
    command: celery -A medcor_backend2 worker --loglevel=info
    volumes:
      - .:/app
      - media_volume:/app/media
    environment:
      - DEBUG=True
      - SECRET_KEY=your-secret-key-here
      - DATABASE_ENGINE=django.db.backends.postgresql
      - DATABASE_NAME=medcor_db2
      - DATABASE_USER=postgres
      - DATABASE_PASS=3765R7vmFQwF6ddlNyWa
      - DATABASE_HOST=medcore.czouassyu7f2.il-central-1.rds.amazonaws.com
      - DATABASE_PORT=5432
      - CELERY_BROKER_URL=amqp://guest:guest@host.docker.internal:5672//
      - CELERY_RESULT_BACKEND=rpc://
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Celery Beat (Scheduler) - Note: Using existing RabbitMQ service on host
  celery-beat:
    build: .
    command: celery -A medcor_backend2 beat --loglevel=info
    volumes:
      - .:/app
    environment:
      - DEBUG=True
      - SECRET_KEY=your-secret-key-here
      - DATABASE_ENGINE=django.db.backends.postgresql
      - DATABASE_NAME=medcor_db2
      - DATABASE_USER=postgres
      - DATABASE_PASS=3765R7vmFQwF6ddlNyWa
      - DATABASE_HOST=medcore.czouassyu7f2.il-central-1.rds.amazonaws.com
      - DATABASE_PORT=5432
      - CELERY_BROKER_URL=amqp://guest:guest@host.docker.internal:5672//
      - CELERY_RESULT_BACKEND=rpc://
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # MCP Server
  mcp-server:
    build: .
    command: python mcp_server.py
    volumes:
      - .:/app
    environment:
      - DEBUG=True
      - SECRET_KEY=your-secret-key-here
      - DATABASE_ENGINE=django.db.backends.postgresql
      - DATABASE_NAME=medcor_db2
      - DATABASE_USER=postgres
      - DATABASE_PASS=3765R7vmFQwF6ddlNyWa
      - DATABASE_HOST=medcore.czouassyu7f2.il-central-1.rds.amazonaws.com
      - DATABASE_PORT=5432
      - CELERY_BROKER_URL=amqp://guest:guest@host.docker.internal:5672//
      - CELERY_RESULT_BACKEND=rpc://
    ports:
      - "8001:8001"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Nginx
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - web
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  static_volume:
  media_volume:
