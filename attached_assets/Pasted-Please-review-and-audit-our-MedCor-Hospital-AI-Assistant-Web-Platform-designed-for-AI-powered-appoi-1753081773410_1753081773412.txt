Please review and audit our MedCor Hospital AI Assistant Web Platform, designed for AI-powered appointment handling and patient-doctor coordination.
This app helps:
• Patients book appointments via AI calls
• Doctors receive appointment alerts
• Admins manage doctor rosters, availability, and call monitoring
• AI handle emergency queries and reminders
⸻
🎯 Your Task:
Please explore the frontend and backend and return a categorized report showing:
1. ✅ What is working correctly
2. ❌ What is broken or misbehaving
3. 🧩 What is missing (e.g., user stories not yet implemented)
4. 🐛 Minor bugs or missing UX helpers that affect smooth usage
⸻
🧪 Test Focus Areas (Based on Core User Stories):
⸻
1. Inbound Call & Appointment Booking (Patient)
• ✅ Does AI answer within 5 seconds?
• ✅ Does it provide doctor availability based on roster?
• ✅ Can a patient book an appointment successfully?
• ✅ Is the booking confirmed clearly via voice?
• 🔍 Are incorrect inputs handled gracefully?
• 🛠️ Is the appointment saved to the backend?
Example Test Cases:
• Inbound call → Book appointment → AI provides slot and confirms
• Provide invalid input → AI clarifies and continues, not ends
• Check backend → Appointment is logged
⸻
2. Doctor Notifications
• ✅ Are doctors linked to appointments?
• ✅ Do doctors receive alerts when patients book or cancel?
• 🔍 Are alerts delivered via email, SMS, or UI?
Example Test Cases:
• Book appointment → Doctor receives notification
• Cancel appointment → Doctor gets cancellation notice
⸻
3. Doctor Roster Upload (Admin)
• ✅ Can admin upload a valid CSV doctor schedule?
• ✅ Are updates reflected on the AI’s availability within 10s?
• 🔍 Does it reject wrong formats?
Example Test Cases:
• Upload valid CSV → AI updates doctor list
• Upload bad file → Shows error
• Ask AI for doctor → Availability reflects update
⸻
4. Outbound Reminders
• ❗ Confirm if reminder calls are implemented
• ✅ Do outbound calls trigger 24 hours before appointments?
• ✅ Do they contain date, time, and doctor name?
• 🔁 If call is missed, does the system retry?
Example Test Cases:
• Schedule appointment → Reminder call is made
• Ignore call → System retries once
⸻
5. Call Logging & Dashboard (Admin)
• ✅ Do inbound/outbound calls show on dashboard?
• ✅ Do logs contain patient name, doctor, time, duration, and outcome?
• 🔍 Can logs be filtered by date, doctor, or patient?
Example Test Cases:
• Make test calls → Logs update in 10s
• Try filtering logs
⸻
6. Emergency Escalation (Patient)
• ✅ Does AI detect “emergency” keyword in real time?
• ✅ Does it escalate by alerting a human operator or sending an alert?
Example Test Cases:
• Inbound call → Say “emergency” → AI escalates or transfers
• Normal inquiry → AI continues without escalation
⸻
7. Doctor Self-Availability
• ✅ Can doctors mark themselves unavailable via dashboard?
• ✅ Does AI respect availability during appointment booking?
Example Test Cases:
• Doctor sets status → AI reflects in response
• Try booking unavailable doctor → AI suggests another
⸻
🔧 Small UX/Flow Issues to Check
Please flag minor issues that may not crash the app but hurt usability, including:
• ⛔ Missing validation (e.g., blank doctor name accepted)
• 🔁 No loading spinners or status feedback on saving
• 🔗 Broken links/buttons in the dashboard
• 🧭 No way to return to home/dashboard from deep pages
• 🌀 Dropdowns or selectors not working
• 🔕 Silent failures (e.g., upload looks successful but data doesn’t save)
• ❌ Missing helper buttons or modals that would ease use
• 🧪 Test error handling — does the UI respond clearly when things fail?
⸻
🧩 Features Likely Missing (Mark If Absent)
• Outbound reminders (verify if present)
• Emergency escalation (verify behavior)
• Doctor upload/availability linked to AI in real-time
• Notifications to doctors (UI or integration visible?)
⸻
🔴 Final Instructions:
• DO NOT make any code changes — just report findings.
• Give results as a checklist or markdown format:
• ✅ Working
• ❌ Broken
• 🧩 Missing
• 🐛 UX Bugs/Flow gaps
Make sure you do not break existing functionality while testing interdependencies. Example: If you test doctor upload, check that appointment booking still works.