Use environment variables to keep your credentials out of source control, then plug them into your React “YCEWidget” integration. For Replit you can set these in the Secrets tab (or a .env):

bash
Kopyala
Düzenle
# .env (Replit Secrets)
REACT_APP_YCE_API_KEY=xsQ0rgMLPQmEoow2SLNuqjTaILjhHAVY
REACT_APP_YCE_ACCOUNT_ID=345677577874051006
REACT_APP_YCE_EMAIL=zemunllc@gmail.com
Then update your widget component to pass the account-ID and email to the SDK init:

jsx
Kopyala
Düzenle
// src/components/YCEWidget.jsx
import React, { useEffect, useRef } from 'react';

const API_KEY     = process.env.REACT_APP_YCE_API_KEY;
const ACCOUNT_ID  = process.env.REACT_APP_YCE_ACCOUNT_ID;
const EMAIL       = process.env.REACT_APP_YCE_EMAIL;

export default function YCEWidget({
  mode = 'ui',                 // 'ui' veya 'headless'
  onCapture = () => {},        // yakalanan imageData callback’i
}) {
  const containerRef = useRef(null);

  useEffect(() => {
    if (!window.YCE) {
      console.error('YCE SDK yüklenmedi!');
      return;
    }

    const options = {
      apiKey: API_KEY,
      accountId: ACCOUNT_ID,
      email: EMAIL,
      mode,                      // 'ui' veya 'headless'
      container: containerRef.current,
      onReady: () => console.log('YCE ready'),
      onImageCaptured: (imageData) => onCapture(imageData),
      // opsiyonel başlık ayarları:
      ui: {
        theme: 'light',
        showInstructions: true,
      },
      capture: {
        faceQuality: true,
        resolution: { width: 640, height: 480 }
      }
    };

    window.YCE.init(options);

    return () => {
      window.YCE.destroy();
    };
  }, [mode, onCapture]);

  return (
    <div
      ref={containerRef}
      style={{ width: '100%', height: '400px', background: '#fafafa' }}
    />
  );
}
Ve bunu chat widget’inize şu şekilde entegre edebilirsiniz:

jsx
Kopyala
Düzenle
// src/App.jsx
import React, { useState } from 'react';
import YCEWidget from './components/YCEWidget';
import ChatWindow from './components/ChatWindow';

function App() {
  const [capturedImage, setCapturedImage] = useState(null);

  const handleCapture = (data) => {
    setCapturedImage(data);
    // Örneğin, chat servisinize şöyle POST edebilirsiniz:
    fetch('/api/chat/send', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        image: data,
        metadata: {
          accountId: process.env.REACT_APP_YCE_ACCOUNT_ID,
          email: process.env.REACT_APP_YCE_EMAIL
        }
      })
    }).catch(console.error);
  };

  return (
    <div className="app">
      <ChatWindow capturedImage={capturedImage} />
      <YCEWidget mode="ui" onCapture={handleCapture} />
    </div>
  );
}

export default App;