# Generated by Django 4.2.7 on 2025-07-27 22:51

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('plan_type', models.CharField(choices=[('basic', 'Basic'), ('professional', 'Professional'), ('enterprise', 'Enterprise'), ('custom', 'Custom')], max_length=20)),
                ('monthly_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quarterly_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('yearly_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_chatbot_users', models.IntegerField(help_text='Maximum concurrent chatbot users')),
                ('max_monthly_conversations', models.IntegerField(help_text='Maximum conversations per month')),
                ('ai_analysis_included', models.BooleanField(default=True, help_text='Include skin/hair/lips analysis')),
                ('custom_branding', models.BooleanField(default=False, help_text='Allow custom hospital branding')),
                ('api_access', models.BooleanField(default=False, help_text='API access for integrations')),
                ('priority_support', models.BooleanField(default=False, help_text='Priority customer support')),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('sort_order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Subscription Plan',
                'verbose_name_plural': 'Subscription Plans',
                'ordering': ['sort_order', 'monthly_price'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subscription_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('billing_cycle', models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], default='monthly', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('trial', 'Trial'), ('expired', 'Expired'), ('cancelled', 'Cancelled'), ('suspended', 'Suspended')], default='trial', max_length=20)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('trial_end_date', models.DateTimeField(blank=True, null=True)),
                ('current_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('monthly_conversations_used', models.IntegerField(default=0)),
                ('last_usage_reset', models.DateTimeField(auto_now_add=True)),
                ('next_billing_date', models.DateTimeField(blank=True, null=True)),
                ('auto_renewal', models.BooleanField(default=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='subscription_plan.subscriptionplan')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='tenants.client')),
            ],
            options={
                'verbose_name': 'Subscription',
                'verbose_name_plural': 'Subscriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('external_payment_id', models.CharField(blank=True, help_text='Payment processor transaction ID', max_length=255, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('payment_method', models.CharField(choices=[('credit_card', 'Credit Card'), ('bank_transfer', 'Bank Transfer'), ('paypal', 'PayPal'), ('stripe', 'Stripe'), ('invoice', 'Invoice')], max_length=20)),
                ('billing_period_start', models.DateTimeField()),
                ('billing_period_end', models.DateTimeField()),
                ('processor_response', models.JSONField(blank=True, help_text='Raw response from payment processor', null=True)),
                ('failure_reason', models.TextField(blank=True, null=True)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='subscription_plan.subscription')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UsageTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date', models.DateField()),
                ('conversations_count', models.IntegerField(default=0)),
                ('ai_analysis_count', models.IntegerField(default=0)),
                ('api_calls_count', models.IntegerField(default=0)),
                ('average_response_time', models.FloatField(blank=True, help_text='Average response time in seconds', null=True)),
                ('user_satisfaction_score', models.FloatField(blank=True, help_text='Average satisfaction score 1-5', null=True)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_logs', to='subscription_plan.subscription')),
            ],
            options={
                'verbose_name': 'Usage Tracking',
                'verbose_name_plural': 'Usage Tracking',
                'ordering': ['-date'],
                'unique_together': {('subscription', 'date')},
            },
        ),
    ]
