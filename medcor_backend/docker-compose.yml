version: '3.8'

services:
  backend:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://medcor_user:medcor_password@db:5432/medcor_db
      - SECRET_KEY=your-production-secret-key
      - CORS_ALLOWED_ORIGINS=https://your-frontend-domain.com
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - HEYGEN_API_KEY=${HEYGEN_API_KEY}
      - YOUCAM_API_KEY=${YOUCAM_API_KEY}
      - YOUCAM_SECRET_KEY=${YOUCAM_SECRET_KEY}
      - AZURE_FACE_API_KEY=${AZURE_FACE_API_KEY}
      - AZURE_FACE_ENDPOINT=${AZURE_FACE_ENDPOINT}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - WEATHER_API_KEY=${WEATHER_API_KEY}
    depends_on:
      - db
      - redis
    volumes:
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=medcor_db
      - POSTGRES_USER=medcor_user
      - POSTGRES_PASSWORD=medcor_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U medcor_user -d medcor_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./staticfiles:/var/www/static:ro
      - ./media:/var/www/media:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data: